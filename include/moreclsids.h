/*
 * (C) 2013 see Authors.txt
 *
 * This file is part of MPC-BE.
 *
 * MPC-BE is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * MPC-BE is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 */

#pragma once

#include <InitGuid.h>

// CLSID of some filters

// Ogg
// {F07E245F-5A1F-4d1e-8BFF-DC31D84A55AB}
DEFINE_GUID(CLSID_OggSplitter,
			0xf07e245f, 0x5a1f, 0x4d1e, 0x8b, 0xff, 0xdc, 0x31, 0xd8, 0x4a, 0x55, 0xab);
// {078C3DAA-9E58-4d42-9E1C-7C8EE79539C5}
DEFINE_GUID(CLSID_OggSplitPropPage,
			0x078c3daa, 0x9e58, 0x4d42, 0x9e, 0x1c, 0x7c, 0x8e, 0xe7, 0x95, 0x39, 0xc5);
// {8CAE96B7-85B1-4605-B23C-17FF5262B296}
DEFINE_GUID(CLSID_OggMux,
			0x8cae96b7, 0x85b1, 0x4605, 0xb2, 0x3c, 0x17, 0xff, 0x52, 0x62, 0xb2, 0x96);
// {AB97AFC3-D08E-4e2d-98E0-AEE6D4634BA4}
DEFINE_GUID(CLSID_OggMuxPropPage,
			0xab97afc3, 0xd08e, 0x4e2d, 0x98, 0xe0, 0xae, 0xe6, 0xd4, 0x63, 0x4b, 0xa4);
// {889EF574-0656-4b52-9091-072E52BB1B80}
DEFINE_GUID(CLSID_VorbisEnc,
			0x889ef574, 0x0656, 0x4b52, 0x90, 0x91, 0x07, 0x2e, 0x52, 0xbb, 0x1b, 0x80);
// {c5379125-fd36-4277-a7cd-fab469ef3a2f}
DEFINE_GUID(CLSID_VorbisEncPropPage,
			0xc5379125, 0xfd36, 0x4277, 0xa7, 0xcd, 0xfa, 0xb4, 0x69, 0xef, 0x3a, 0x2f);
// {02391f44-2767-4e6a-a484-9b47b506f3a4}
DEFINE_GUID(CLSID_VorbisDec,
			0x02391f44, 0x2767, 0x4e6a, 0xa4, 0x84, 0x9b, 0x47, 0xb5, 0x06, 0xf3, 0xa4);
// {77983549-ffda-4a88-b48f-b924e8d1f01c}
DEFINE_GUID(CLSID_OggDSAboutPage,
			0x77983549, 0xffda, 0x4a88, 0xb4, 0x8f, 0xb9, 0x24, 0xe8, 0xd1, 0xf0, 0x1c);

// sources and splitters
// {6B6D0800-9ADA-11d0-A520-00A0D10129C0}
DEFINE_GUID(CLSID_NetShowSource,
			0x6b6d0800, 0x9ada, 0x11d0, 0xa5, 0x20, 0x00, 0xa0, 0xd1, 0x01, 0x29, 0xc0);
// {564FD788-86C9-4444-971E-CC4A243DA150} Haali Splitter (AR)
DEFINE_GUID(CLSID_HaaliSplitterAR,
			0x564FD788, 0x86C9, 0x4444, 0x97, 0x1E, 0xCC, 0x4A, 0x24, 0x3D, 0xA1, 0x50);
// {55DA30FC-F16B-49FC-BAA5-AE59FC65F82D} Haali Splitter
DEFINE_GUID(CLSID_HaaliSplitter,
			0x55DA30FC, 0xF16B, 0x49FC, 0xBA, 0xA5, 0xAE, 0x59, 0xFC, 0x65, 0xF8, 0x2D);
// {171252A0-8820-4AFE-9DF8-5C92B2D66B04} LAV Splitter
DEFINE_GUID(CLSID_LAVSplitter,
			0x171252A0, 0x8820, 0x4AFE, 0x9D, 0xF8, 0x5C, 0x92, 0xB2, 0xD6, 0x6B, 0x04);
// {B98D13E7-55DB-4385-A33D-09FD1BA26338} LAV Source
DEFINE_GUID(CLSID_LAVSource,
			0xB98D13E7, 0x55DB, 0x4385, 0xA3, 0x3D, 0x09, 0xFD, 0x1B, 0xA2, 0x63, 0x38);

// video decoders
// {212690FB-83E5-4526-8FD7-74478B7939CD} from wmcodecdsp.h
DEFINE_GUID(CLSID_CMPEG2VidDecoderDS,
			0x212690FB, 0x83E5, 0x4526, 0x8F, 0xD7, 0x74, 0x47, 0x8B, 0x79, 0x39, 0xCD);
// {71E4616A-DB5E-452B-8CA5-71D9CC7805E9} - Nvidia VideoDecoder
DEFINE_GUID(CLSID_NvidiaVideoDecoder,
			0x71E4616A, 0xDB5E, 0x452B, 0x8C, 0xA5, 0x71, 0xD9, 0xCC, 0x78, 0x05, 0xE9);
// {D7D50E8D-DD72-43C2-8587-A0C197D837D2} - Sonic Cinemaster VideoDecoder
DEFINE_GUID(CLSID_SonicCinemasterVideoDecoder,
			0xD7D50E8D, 0xDD72, 0x43C2, 0x85, 0x87, 0xA0, 0xC1, 0x97, 0xD8, 0x37, 0xD2);

// audio decoders
// {A753A1EC-973E-4718-AF8E-A3F554D45C44}
DEFINE_GUID(CLSID_AC3Filter,
			0xA753A1EC, 0x973E, 0x4718, 0xAF, 0x8E, 0xA3, 0xF5, 0x54, 0xD4, 0x5C, 0x44);

// allocator presenters
// {495CF191-810D-44c7-92C5-E7D46AE00F44}
DEFINE_GUID(CLSID_VMR7AllocatorPresenter,
			0x495cf191, 0x810d, 0x44c7, 0x92, 0xc5, 0xe7, 0xd4, 0x6a, 0xe0, 0x0f, 0x44);
// {97B3462E-1752-4dfb-A038-271060BC7A94}
DEFINE_GUID(CLSID_RM7AllocatorPresenter,
			0x97b3462e, 0x1752, 0x4dfb, 0xa0, 0x38, 0x27, 0x10, 0x60, 0xbc, 0x7a, 0x94);
// {36CC5A71-441C-462a-9D10-48A19485938D}
DEFINE_GUID(CLSID_QT7AllocatorPresenter,
			0x36cc5a71, 0x441c, 0x462a, 0x9d, 0x10, 0x48, 0xa1, 0x94, 0x85, 0x93, 0x8d);
// {4E4834FA-22C2-40e2-9446-F77DD05D245E}
DEFINE_GUID(CLSID_VMR9AllocatorPresenter,
			0x4e4834fa, 0x22c2, 0x40e2, 0x94, 0x46, 0xf7, 0x7d, 0xd0, 0x5d, 0x24, 0x5e);
// {A1542F93-EB53-4e11-8D34-05C57ABA9207}
DEFINE_GUID(CLSID_RM9AllocatorPresenter,
			0xa1542f93, 0xeb53, 0x4e11, 0x8d, 0x34, 0x05, 0xc5, 0x7a, 0xba, 0x92, 0x07);
// {622A4032-70CE-4040-8231-0F24F2886618}
DEFINE_GUID(CLSID_QT9AllocatorPresenter,
			0x622a4032, 0x70ce, 0x4040, 0x82, 0x31, 0x0f, 0x24, 0xf2, 0x88, 0x66, 0x18);
// {7612b889-e070-4bcc-0b88-91cb794174ab}
DEFINE_GUID(CLSID_EVRAllocatorPresenter,
			0x7612b889, 0xe070, 0x4bcc, 0xb8, 0x08, 0x91, 0xcb, 0x79, 0x41, 0x74, 0xab);
// {F9F62627-E3EF-4a2e-B6C9-5D4C0DC3326B}
DEFINE_GUID(CLSID_SyncAllocatorPresenter,
			0xf9f62627, 0xe3ef, 0x4a2e, 0xb6, 0xc9, 0x5d, 0x4c, 0x0d, 0xc3, 0x32, 0x6b);
// {B72EBDD4-831D-440f-A656-B48F5486CD82}
DEFINE_GUID(CLSID_DXRAllocatorPresenter,
			0xb72ebdd4, 0x831d, 0x440f, 0xa6, 0x56, 0xb4, 0x8f, 0x54, 0x86, 0xcd, 0x82);
// {C7ED3100-9002-4595-9DCA-B30B30413429}
DEFINE_GUID(CLSID_madVRAllocatorPresenter,
			0xc7ed3100, 0x9002, 0x4595, 0x9d, 0xca, 0xb3, 0x0b, 0x30, 0x41, 0x34, 0x29);

// video renderers
// {760A8F35-97E7-479d-AAF5-DA9EFF95D751} Haali's video renderer
DEFINE_GUID(CLSID_DXR,
			0x760a8f35, 0x97e7, 0x479d, 0xaa, 0xf5, 0xda, 0x9e, 0xff, 0x95, 0xd7, 0x51);
// {E1A8B82A-32CE-4B0D-BE0D-AA68C772E423} madVR
DEFINE_GUID(CLSID_madVR,
			0xe1a8b82a, 0x32ce, 0x4b0d, 0xbe, 0x0d, 0xaa, 0x68, 0xc7, 0x72, 0xe4, 0x23);

// audio renderers
// {601D2A2B-9CDE-40bd-8650-0485E3522727}
DEFINE_GUID(CLSID_MpcAudioRenderer,
			0x601d2a2b, 0x9cde, 0x40bd, 0x86, 0x50, 0x04, 0x85, 0xe3, 0x52, 0x27, 0x27);
// {9DC15360-914C-46B8-B9DF-BFE67FD36C6A} - ReClock
DEFINE_GUID(CLSID_ReClock,
			0x9dc15360, 0x914c, 0x46b8, 0xb9, 0xdf, 0xbf, 0xe6, 0x7f, 0xd3, 0x6c, 0x6a);

// other filters
// {AB9D6472-752F-43F6-B29E-61207BDA8E06} - RDP Redirection Filter
DEFINE_GUID(CLSID_RDPDShowRedirectionFilter,
			0xAB9D6472, 0x752F, 0x43F6, 0xB2, 0x9E, 0x61, 0x20, 0x7B, 0xDA, 0x8E, 0x06);
// {D3CD7858-971A-4838-ACEC-40CA5D529DC8} - Morgan's Stream Switcher
DEFINE_GUID(CLSID_MorganSwitcher,
			0xD3CD7858, 0x971A, 0x4838, 0xAC, 0xEC, 0x40, 0xCA, 0x5D, 0x52, 0x9D, 0xC8);
// {9852A670-F845-491B-9BE6-EBD841B8A613} DirectVobSub || VSFilter (auto-loading version)
DEFINE_GUID(CLSID_VSFilter,
			0x9852A670, 0xF845, 0x491B, 0x9B, 0xE6, 0xEB, 0xD8, 0x41, 0xB8, 0xA6, 0x13);
// {2DFCB782-EC20-4A7C-B530-4577ADB33F21} XySubFilter
DEFINE_GUID(CLSID_XySubFilter,
			0x2DFCB782, 0xEC20, 0x4A7C, 0xB5, 0x30, 0x45, 0x77, 0xAD, 0xB3, 0x3F, 0x21);
